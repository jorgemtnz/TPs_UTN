Object subclass: #Almacenadora	instanceVariableNames: 'capacidadCrearMiel'	classVariableNames: ''	poolDictionaries: ''	category: 'TpApiario cambiado'!!Almacenadora methodsFor: 'as yet unclassified' stamp: 'jorge 6/9/2013 12:59'!hazMielde: unaColmena^(self seleccionaNectar: unaColmena)/2.! !!Almacenadora methodsFor: 'as yet unclassified' stamp: 'jorge 6/9/2013 17:34'!initializecapacidadCrearMiel:=10.! !!Almacenadora methodsFor: 'as yet unclassified' stamp: 'jorgemartinez 7/12/2013 17:28'!seleccionaNectar: unaColmena|valor|( unaColmena nectar nectarRecolectado - capacidadCrearMiel < 0)ifTrue:[valor:=unaColmena nectar nectarRecolectado. unaColmena nectar nectarRecolectado:0. ^valor ]ifFalse:[unaColmena nectar disminuirNectar: capacidadCrearMiel.^capacidadCrearMiel]"si hay menos de lo que la almacenadora puede tomar(cantidadNectarDeshidratado) entonces toma lo que queda, si hay mas entonces toma segun su capacidad."! !!Almacenadora methodsFor: 'as yet unclassified' stamp: 'jorgemartinez 7/13/2013 08:22'!soy:unaObrera hazTuTarea:unaColmena(unaColmena nectar humedadNectar < 30)ifTrue:[unaColmena agregaMiel: (self hazMielde: unaColmena)]! !!Almacenadora methodsFor: 'accessing' stamp: 'jorge 6/9/2013 17:40'!capacidadCrearMiel	^ capacidadCrearMiel! !!Almacenadora methodsFor: 'accessing' stamp: 'jorge 6/9/2013 17:40'!capacidadCrearMiel: unValor	capacidadCrearMiel := unValor! !!Almacenadora methodsFor: 'accessing' stamp: 'jorgemartinez 7/15/2013 21:21'!enfermate:unPorcentajecapacidadCrearMiel:= self capacidadCrearMiel - (self capacidadCrearMiel *unPorcentaje).! !!Almacenadora methodsFor: 'accessing' stamp: 'jorgemartinez 7/13/2013 08:22'!teEnfermas: unaEnfermedadunaEnfermedad afectaAlmacenadora: self.! !Object subclass: #Apiario	instanceVariableNames: 'colmenas'	classVariableNames: ''	poolDictionaries: ''	category: 'TpApiario cambiado'!!Apiario methodsFor: 'as yet unclassified' stamp: 'jorge 6/2/2013 00:06'!agregarColmena: unaColmenacolmenas add: unaColmena  "agrega una colmena"! !!Apiario methodsFor: 'as yet unclassified' stamp: 'jorge 6/2/2013 01:01'!quienEsLaColmenaMaFuerte^ (colmenas detectMax: [: unaColmena | unaColmena quienesPican size  ] )"se busca dentro de la coleccion colmenas la que tiene  mas abejas que pican"! !!Apiario methodsFor: 'accessing' stamp: 'JORGEMARTINEZRODRIGUEZ 5/26/2013 16:58'!colmenas	^ colmenas! !!Apiario methodsFor: 'accessing' stamp: 'jorge 6/2/2013 01:00'!colmenas: unacolecciondeColmenas	colmenas := unacolecciondeColmenas! !!Apiario methodsFor: 'accessing' stamp: 'jorge 6/2/2013 00:08'!initializecolmenas:= Set new. "inicializo la coleccion"! !Object subclass: #Abeja	instanceVariableNames: 'aguijon'	classVariableNames: ''	poolDictionaries: ''	category: 'TpApiario cambiado'!!Abeja methodsFor: 'as yet unclassified' stamp: 'JORGEMARTINEZRODRIGUEZ 5/26/2013 03:02'!aguijon^aguijon ! !!Abeja methodsFor: 'as yet unclassified' stamp: 'JORGEMARTINEZRODRIGUEZ 5/26/2013 03:03'!puedesPicar ^aguijon ! !!Abeja methodsFor: 'accessing' stamp: 'jorge 6/2/2013 00:59'!aguijon: tieneOnotiene	aguijon := tieneOnotiene! !Object subclass: #Nectar	instanceVariableNames: 'nectarRecolectado humedadNectar'	classVariableNames: ''	poolDictionaries: ''	category: 'TpApiario cambiado'!!Nectar methodsFor: 'as yet unclassified' stamp: 'jorgemartinez 7/12/2013 17:02'!agregarNectar:unValornectarRecolectado:= nectarRecolectado + unValor."agrego el nectar"! !!Nectar methodsFor: 'as yet unclassified' stamp: 'jorgemartinez 7/12/2013 17:39'!alcanzaElNectar: cantidadNectar para: unaCantidad(self nectarRecolectado > (cantidadNectar*unaCantidad) )ifFalse: [Error signal:'nectar insuficiente']. nectarRecolectado:= self nectarRecolectado - (cantidadNectar * unaCantidad)  "compara si la cantidad de nectar  que deben comer las abejas es menor al recolectado, entonces lo disminuye, sino genera un error. "! !!Nectar methodsFor: 'as yet unclassified' stamp: 'jorgemartinez 7/12/2013 17:25'!disminuirHumedad: unValorhumedadNectar:=humedadNectar - unValor.! !!Nectar methodsFor: 'as yet unclassified' stamp: 'jorgemartinez 7/12/2013 17:27'!disminuirNectar:unValornectarRecolectado:= nectarRecolectado - unValor."disminuyo el nectar"! !!Nectar methodsFor: 'as yet unclassified' stamp: 'jorgemartinez 7/12/2013 17:32'!initializenectarRecolectado:= 10.humedadNectar:= 80.! !!Nectar methodsFor: 'accessing' stamp: 'jorgemartinez 7/12/2013 17:36'!humedadNectar	^ humedadNectar! !!Nectar methodsFor: 'accessing' stamp: 'jorgemartinez 7/12/2013 17:36'!humedadNectar: anObject	humedadNectar := anObject! !!Nectar methodsFor: 'accessing' stamp: 'jorgemartinez 7/12/2013 17:36'!nectarRecolectado	^ nectarRecolectado! !!Nectar methodsFor: 'accessing' stamp: 'jorgemartinez 7/12/2013 17:36'!nectarRecolectado: anObject	nectarRecolectado := anObject! !Object subclass: #Colmena	instanceVariableNames: 'abejas flores temperatura nombre piquera miel nectar'	classVariableNames: ''	poolDictionaries: ''	category: 'TpApiario cambiado'!!Colmena methodsFor: 'as yet unclassified' stamp: 'jorge 6/2/2013 00:11'!agregarAbeja: unaAbejaabejas add: unaAbeja  "agrega una abeja"! !!Colmena methodsFor: 'as yet unclassified' stamp: 'jorge 6/9/2013 16:59'!disminuirMiel:unValormiel:=miel-unValor.! !!Colmena methodsFor: 'as yet unclassified' stamp: 'jorgemartinez 7/13/2013 08:08'!quienesPican^ (abejas select: [: unaAbeja | unaAbeja puedesPicar])  "devuelve la coleccion solo con las abejas que pican"! !!Colmena methodsFor: 'accessing' stamp: 'JORGEMARTINEZRODRIGUEZ 5/23/2013 01:58'!abejas	^ abejas! !!Colmena methodsFor: 'accessing' stamp: 'jorge 6/2/2013 01:01'!abejas: unaColecciondeAbejas	abejas := unaColecciondeAbejas! !!Colmena methodsFor: 'accessing' stamp: 'jorge 6/9/2013 16:58'!agregaMiel:unValormiel:=miel+unValor! !!Colmena methodsFor: 'accessing' stamp: 'jorge 6/2/2013 00:12'!agregarFlor: unaFlorflores add: unaFlor "agrega una flor"! !!Colmena methodsFor: 'accessing' stamp: 'jorgemartinez 7/13/2013 23:36'!agregarGuardiana:unaAbejaabejas add:unaAbeja.self piquera abejas add:unaAbeja."agrego la referencia de abeja con rol de guardiana en la coleccion de abejas de la colmena y de la piquera, es decir  ambas referencias apuntan al mismo objeto abeja."! !!Colmena methodsFor: 'accessing' stamp: 'jorgemartinez 7/12/2013 17:09'!comanNectar: cantidadNectar^[nectar alcanzaElNectar: cantidadNectar para: self abejas size ]on: Error do: [:ex | ex messageText]."manda un mensaje al objeto para saber si alcanzara el nectar y sino alcanza atrapa el error generado"! !!Colmena methodsFor: 'accessing' stamp: 'jorgemartinez 7/13/2013 23:37'!creaObreraConRoldeGuardiana			self  agregarGuardiana: (Obrera crearConRol: Guardiana new ).		"crea abeja guardiana y la manda a la piquera"	! !!Colmena methodsFor: 'accessing' stamp: 'jorgemartinez 7/13/2013 23:02'!creaZanganosself agregarAbeja: Zangano new."crea zangano y lo manda a agregar a la coleccion de abejas"! !!Colmena methodsFor: 'accessing' stamp: 'jorgemartinez 7/13/2013 23:02'!crearObreraConRolPecoreadoraself agregarAbeja: (Obrera crearConRol: Pecoreadora new)."crea pecoredora y la manda a agregar a la coleccion de abejas"! !!Colmena methodsFor: 'accessing' stamp: 'jorge 6/9/2013 19:12'!disminuirTemperatura: unValortemperatura:= temperatura - unValor.! !!Colmena methodsFor: 'accessing' stamp: 'jorgemartinez 7/13/2013 23:01'!entregaMiel: unaCantidad|remanente|(self miel >unaCantidad)ifTrue:[self disminuirMiel:unaCantidad.^unaCantidad]ifFalse:[remanente:=self miel. self miel: 0.^remanente]"entrega la cantidad que le piden o lo que queda."! !!Colmena methodsFor: 'accessing' stamp: 'jorgemartinez 7/13/2013 08:02'!eresFuerte^ ((self abejas) size*0.5 < (self quienesPican size))"analizo si mas de la mitad de la poblacion de abejas en la colmena pueden picar, si es true entonces es una colmena fuerte"! !!Colmena methodsFor: 'accessing' stamp: 'jorgemartinez 7/13/2013 08:02'!esAtacadaPor: enemigo(self eresFuerte)ifFalse:[enemigo atacaA: self].! !!Colmena methodsFor: 'accessing' stamp: 'jorgemartinez 7/14/2013 01:03'!esAtacadaPorLos:enemigos enemigos do:[:enemigo| self esAtacadaPor: enemigo].! !!Colmena methodsFor: 'accessing' stamp: 'jorge 6/2/2013 00:16'!esDeLaFamilia: unaAbeja	^self abejas includes: unaAbeja.	"averigua si la abeja esta en la coleccion de abejas de la colmena."! !!Colmena methodsFor: 'accessing' stamp: 'jorgemartinezrodriguez 5/23/2013 01:20'!flores	^ flores! !!Colmena methodsFor: 'accessing' stamp: 'jorge 6/2/2013 01:02'!flores:unaColecciondeFlores	flores := unaColecciondeFlores! !!Colmena methodsFor: 'accessing' stamp: 'jorgemartinez 7/13/2013 21:08'!haganSuTareaabejas do: [:unabeja| unabeja hazTuTarea: self ]. "de coleccion de abejas de la colmena, hace que cada una reciba el mensaje hazTuTarea."! !!Colmena methodsFor: 'accessing' stamp: 'jorgemartinez 7/12/2013 17:32'!initializeflores:= Set new.abejas:= Set new.temperatura:= 60.miel:=50."inicializa valores de atributos"! !!Colmena methodsFor: 'accessing' stamp: 'jorge 6/2/2013 18:56'!miel	^ miel! !!Colmena methodsFor: 'accessing' stamp: 'jorge 6/2/2013 18:57'!miel: valor	miel := valor! !!Colmena methodsFor: 'accessing' stamp: 'jorgemartinez 7/13/2013 23:33'!nectar	^ nectar! !!Colmena methodsFor: 'accessing' stamp: 'jorgemartinez 7/13/2013 23:33'!nectar: anObject	nectar := anObject! !!Colmena methodsFor: 'accessing' stamp: 'JORGEMARTINEZRODRIGUEZ 5/26/2013 16:36'!nombre	^ nombre! !!Colmena methodsFor: 'accessing' stamp: 'jorge 6/2/2013 01:02'!nombre: unNombre	nombre := unNombre! !!Colmena methodsFor: 'accessing' stamp: 'MarceloCattarello 5/30/2013 05:42'!piquera	^ piquera! !!Colmena methodsFor: 'accessing' stamp: 'jorge 6/2/2013 00:19'!piquera: unaPiquera	piquera := unaPiquera! !!Colmena methodsFor: 'accessing' stamp: 'jorge 6/2/2013 00:10'!printOn: unStreamunStream nextPutAll: 'su nombre es: '.self nombre printOn: unStream. "se usa para que aparezca el nombre de colmena, cuando se instancio."! !!Colmena methodsFor: 'accessing' stamp: 'JORGEMARTINEZRODRIGUEZ 5/26/2013 02:46'!temperatura	^ temperatura! !!Colmena methodsFor: 'accessing' stamp: 'jorge 6/2/2013 01:03'!temperatura: valorTemperatura	temperatura :=valorTemperatura! !"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!Colmena class	instanceVariableNames: ''!!Colmena class methodsFor: 'as yet unclassified' stamp: 'jorgemartinez 7/16/2013 13:41'!crearConNombre:unNombre yNectar: unNectar|colmena|colmena := Colmena new.colmena nombre: unNombre.colmena nectar:unNectar.^colmena! !Abeja subclass: #Obrera	instanceVariableNames: 'rolObrera buche'	classVariableNames: ''	poolDictionaries: ''	category: 'TpApiario cambiado'!!Obrera methodsFor: 'as yet unclassified' stamp: 'jorgemartinez 7/14/2013 10:07'!initialize aguijon := true. "tiene aguijon y puede picar"buche:=1.! !!Obrera methodsFor: 'accessing' stamp: 'jorgemartinez 7/14/2013 10:02'!buche	^ buche! !!Obrera methodsFor: 'accessing' stamp: 'jorgemartinez 7/14/2013 10:02'!buche: anObject	buche := anObject! !!Obrera methodsFor: 'accessing' stamp: 'jorgemartinez 7/13/2013 23:10'!enferma: enfermedadself rolObrera teEnfermas: enfermedad. "le dice a la instancia de su rol que se enferme"! !!Obrera methodsFor: 'accessing' stamp: 'jorge 6/2/2013 00:05'!hazTuTarea: unaColmenaself rolObrera soy: self hazTuTarea:unaColmena "le dice a la instancia de su rol que haga la tarea"! !!Obrera methodsFor: 'accessing' stamp: 'JORGEMARTINEZRODRIGUEZ 5/26/2013 04:47'!rolObrera	^ rolObrera! !!Obrera methodsFor: 'accessing' stamp: 'jorge 6/2/2013 00:59'!rolObrera: unRol	rolObrera := unRol! !"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!Obrera class	instanceVariableNames: ''!!Obrera class methodsFor: 'as yet unclassified' stamp: 'JORGEMARTINEZRODRIGUEZ 5/26/2013 14:41'!crearConRol: unrol |obrera|obrera := self new.obrera rolObrera: unrol.^obrera! !Object subclass: #Hormiguero	instanceVariableNames: 'cantHormiga deposito'	classVariableNames: ''	poolDictionaries: ''	category: 'TpApiario cambiado'!!Hormiguero methodsFor: 'accessing' stamp: 'jorgemartinez 7/13/2013 21:03'!atacaA:unaColmenaself deposito: (unaColmena entregaMiel:cantHormiga)     "averigua si la puede atacar y si es asi entonces toma su miel segun la cantidad de hormigas que atacaron"! !!Hormiguero methodsFor: 'accessing' stamp: 'jorge 6/9/2013 12:14'!cantHormiga	^ cantHormiga! !!Hormiguero methodsFor: 'accessing' stamp: 'jorge 6/9/2013 16:44'!cantHormiga: unaCantidad	cantHormiga := unaCantidad! !!Hormiguero methodsFor: 'accessing' stamp: 'jorge 6/2/2013 19:00'!deposito	^ deposito! !!Hormiguero methodsFor: 'accessing' stamp: 'jorge 6/2/2013 20:56'!deposito: unValor	deposito := unValor! !!Hormiguero methodsFor: 'as yet unclassified' stamp: 'jorge 6/9/2013 12:09'!initializecantHormiga:=2.deposito:=0.! !Object subclass: #Pecoreadora	instanceVariableNames: 'capacidadNectarArecolectar'	classVariableNames: ''	poolDictionaries: ''	category: 'TpApiario cambiado'!!Pecoreadora methodsFor: 'accessing' stamp: 'jorgemartinez 6/8/2013 16:21'!capacidadNectarArecolectar	^ capacidadNectarArecolectar! !!Pecoreadora methodsFor: 'accessing' stamp: 'jorge 6/9/2013 16:44'!capacidadNectarArecolectar: unaValor	capacidadNectarArecolectar := unaValor! !!Pecoreadora methodsFor: 'accessing' stamp: 'jorgemartinez 7/15/2013 21:21'!enfermate:unPorcentajecapacidadNectarArecolectar:=capacidadNectarArecolectar - (capacidadNectarArecolectar*unPorcentaje).! !!Pecoreadora methodsFor: 'accessing' stamp: 'jorgemartinez 7/13/2013 08:27'!initializecapacidadNectarArecolectar:=3.! !!Pecoreadora methodsFor: 'accessing' stamp: 'jorgemartinez 7/13/2013 23:09'!recolectaDe: unaflor ydejaloEn: unaColmena unaColmena nectar agregarNectar:  (unaflor dameNectar: self capacidadNectarArecolectar)."busca el nectar de una flor y lo deja en la colmena "! !!Pecoreadora methodsFor: 'accessing' stamp: 'jorgemartinez 7/13/2013 08:23'!soy: unaObrera hazTuTarea:unaColmenaunaColmena flores do:[:unaflor| self recolectaDe: unaflor ydejaloEn: unaColmena]"a cada elemento de la coleccion de flores le aplica el mensaje de recolectar"! !!Pecoreadora methodsFor: 'as yet unclassified' stamp: 'jorgemartinez 7/13/2013 08:26'!teEnfermas: unaEnfermedadunaEnfermedad  afectaPecoreadora: self.! !Object subclass: #Flor	instanceVariableNames: 'nectarDeFlor kmAcolmena'	classVariableNames: ''	poolDictionaries: ''	category: 'TpApiario cambiado'!!Flor methodsFor: 'as yet unclassified' stamp: 'jorge 6/9/2013 16:42'!dameNectar:unaCantidad| nectar |(nectarDeFlor - unaCantidad < 0 )ifFalse: [  (nectarDeFlor := nectarDeFlor -unaCantidad). ^unaCantidad ]ifTrue: [(nectar:= nectarDeFlor  ). nectarDeFlor := 0. ^ nectar  ] "toma el nectar de la flor segun una cantidad, si hay menos toma el que queda"! !!Flor methodsFor: 'accessing' stamp: 'JORGEMARTINEZRODRIGUEZ 5/26/2013 02:51'!kmAcolmena	^ kmAcolmena! !!Flor methodsFor: 'accessing' stamp: 'jorge 6/2/2013 01:03'!kmAcolmena: valorDistancia	kmAcolmena := valorDistancia! !!Flor methodsFor: 'accessing' stamp: 'JORGEMARTINEZRODRIGUEZ 5/26/2013 02:51'!nectarDeFlor	^ nectarDeFlor! !!Flor methodsFor: 'accessing' stamp: 'jorge 6/2/2013 01:03'!nectarDeFlor: cantidadNectar	nectarDeFlor := cantidadNectar! !"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!Flor class	instanceVariableNames: ''!!Flor class methodsFor: 'class initialization' stamp: 'jorge 6/2/2013 00:20'!crearFlorConunaDistancia:distancia   NectarCantidad:cantidad |flor|  flor := self new.  flor kmAcolmena: distancia.  flor nectarDeFlor: cantidad.  ^flor. "crea una flor con valores para sus atributos"! !Object subclass: #Varroa	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: ''	category: 'TpApiario cambiado'!!Varroa methodsFor: 'as yet unclassified' stamp: 'jorge 6/9/2013 17:08'!afectaAlmacenadora: unaAlmacenadoraunaAlmacenadora enfermate:0.15.! !!Varroa methodsFor: 'as yet unclassified' stamp: 'jorge 6/9/2013 17:09'!afectaPecoreadora: unaPecoreadoraunaPecoreadora enfermate:0.3.! !!Varroa methodsFor: 'as yet unclassified' stamp: 'jorge 6/9/2013 17:10'!afectaZangano: unZanganounZangano enfermate:0.2 ! !!Varroa methodsFor: 'as yet unclassified' stamp: 'jorgemartinez 7/13/2013 08:32'!atacaA: unaColmenaunaColmena abejas do: [:unabeja| unabeja enferma: self ].! !Object subclass: #Piquera	instanceVariableNames: 'cantCentimetros colmena abejas'	classVariableNames: ''	poolDictionaries: ''	category: 'TpApiario cambiado'!!Piquera methodsFor: 'accessing' stamp: 'jorgemartinez 7/13/2013 08:33'!abejas	^ abejas! !!Piquera methodsFor: 'accessing' stamp: 'jorgemartinez 7/13/2013 08:33'!abejas: anObject	abejas := anObject! !!Piquera methodsFor: 'accessing' stamp: 'JORGEMARTINEZRODRIGUEZ 5/26/2013 06:55'!cantCentimetros	^ cantCentimetros! !!Piquera methodsFor: 'accessing' stamp: 'jorge 6/2/2013 01:04'!cantCentimetros: valor	cantCentimetros := valor! !!Piquera methodsFor: 'accessing' stamp: 'JORGEMARTINEZRODRIGUEZ 5/26/2013 07:28'!colmena	^ colmena! !!Piquera methodsFor: 'accessing' stamp: 'jorge 6/2/2013 01:04'!colmena: unaColmena	colmena := unaColmena! !!Piquera methodsFor: 'accessing' stamp: 'jorgemartinez 7/14/2013 10:19'!intrusas^(abejas reject:[: abeja|  colmena esDeLaFamilia:abeja])"devuelve la coleccion de abejas intrusas."! !!Piquera methodsFor: 'accessing' stamp: 'jorgemartinez 7/14/2013 11:40'!quieroEntrar: unaAbeja self abejas add: unaAbeja. abejas do:[:abeja| abeja hazTuTarea: colmena.]  "agrega al forastero a la colección de abejas, luego  manda a cada una a  hacer su tarea."! !!Piquera methodsFor: 'as yet unclassified' stamp: 'jorgemartinez 7/13/2013 21:41'!initializeabejas:=OrderedCollection new."inicializa variables"! !!Piquera methodsFor: 'as yet unclassified' stamp: 'jorgemartinez 7/15/2013 21:18'!morir: unabejaabejas remove: unabeja."elimina la  intrusa"! !"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!Piquera class	instanceVariableNames: ''!!Piquera class methodsFor: 'as yet unclassified' stamp: 'JORGEMARTINEZRODRIGUEZ 5/26/2013 14:47'!crearContamanio: unaCantidad enLaColmena:unaColmena|piquera|piquera:= Piquera new.piquera cantCentimetros: unaCantidad.piquera colmena: unaColmena.^piquera! !Object subclass: #Guardiana	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: ''	category: 'TpApiario cambiado'!!Guardiana methodsFor: 'as yet unclassified' stamp: 'jorgemartinez 7/15/2013 21:39'!cuidaPiquera:unaObrera de:unaColmena|intrusas |intrusas:= unaColmena piquera intrusas. intrusas notEmptyifTrue: [self pica:unaObrera de: unaColmena. unaColmena piquera morir:( intrusas first)]"	si hay un forastero que quieren entrar a la colmena la abeja guardiana lo pica"! !!Guardiana methodsFor: 'as yet unclassified' stamp: 'jorgemartinez 7/15/2013 21:18'!pica:unaObrera de:unaColmenaunaColmena abejas remove:unaObrera.unaColmena piquera morir: unaObrera"elimina las referencias de  abejaGuardia porque pico a un intruso. "! !!Guardiana methodsFor: 'as yet unclassified' stamp: 'jorgemartinez 7/15/2013 21:40'!soy: unaObrera hazTuTarea: unaColmena(unaColmena esDeLaFamilia: unaObrera) ifTrue:[self cuidaPiquera:unaObrera de:unaColmena]."lo hice asi porque cuando en la piquera tengo una abeja guardiana que no es de la colmena, entonces me daba un error"! !!Guardiana methodsFor: 'as yet unclassified' stamp: 'jorgemartinez 7/13/2013 08:30'!teEnfermas: enfermedad. ! !Object subclass: #Pillaje	instanceVariableNames: 'colmenaPilladora'	classVariableNames: ''	poolDictionaries: ''	category: 'TpApiario cambiado'!!Pillaje methodsFor: 'as yet unclassified' stamp: 'jorgemartinez 7/15/2013 22:36'!de: colmenaAgresora haganPillaje: invasores a: colmenaVictima|sobrevivientes cantidad|invasores do: [:invasor| colmenaVictima piquera quieroEntrar: invasor].sobrevivientes:=colmenaVictima piquera intrusas.(sobrevivientes notEmpty)ifTrue:[cantidad := sobrevivientes first buche.colmenaAgresora agregaMiel: (colmenaVictima entregaMiel: (sobrevivientes size * cantidad)) ]."se mueren las abejas guardianas  y las intrusas. Pero si hay sobrevivientes de los que atacaron, entonces le quitan la miel y lo guardan en el buche."! !!Pillaje methodsFor: 'as yet unclassified' stamp: 'jorgemartinez 7/15/2013 22:43'!la: colmenaAgresora hacePillajeA: colmenaVictimaself de:colmenaAgresora haganPillaje:colmenaAgresora quienesPican a: colmenaVictima.! !!Pillaje methodsFor: 'accessing' stamp: 'jorgemartinez 7/16/2013 13:29'!atacaA:unaColmena self  la:self colmenaPilladora hacePillajeA:unaColmena.! !!Pillaje methodsFor: 'accessing' stamp: 'jorgemartinez 7/16/2013 13:28'!colmenaPilladora	^ colmenaPilladora! !!Pillaje methodsFor: 'accessing' stamp: 'jorgemartinez 7/16/2013 13:28'!colmenaPilladora: anObject	colmenaPilladora := anObject! !Abeja subclass: #Reina	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: ''	category: 'TpApiario cambiado'!!Reina methodsFor: 'as yet unclassified' stamp: 'jorgemartinez 7/13/2013 08:20'!enferma: enfermedad! !!Reina methodsFor: 'as yet unclassified' stamp: 'JORGEMARTINEZRODRIGUEZ 5/26/2013 07:13'!hazTuTarea: unaColmenaself procreaEn:unaColmena ! !!Reina methodsFor: 'as yet unclassified' stamp: 'CARO 5/21/2013 17:55'!initialize aguijon := false ! !!Reina methodsFor: 'as yet unclassified' stamp: 'jorgemartinez 7/12/2013 17:34'!procreaEn: unaColmena(0.2*0.3*(unaColmena nectar nectarRecolectado) truncated) rounded timesRepeat:[unaColmena creaZanganos].(0.4*0.3*(unaColmena nectar nectarRecolectado) truncated) rounded timesRepeat: [unaColmena crearObreraConRolPecoreadora].(0.4*0.3*(unaColmena nectar nectarRecolectado) truncated) rounded  timesRepeat: [unaColmena creaObreraConRoldeGuardiana]."crea a las abejas segun el nectarRecolectado"! !Abeja subclass: #Zangano	instanceVariableNames: 'capacidadDeventilar'	classVariableNames: ''	poolDictionaries: ''	category: 'TpApiario cambiado'!!Zangano methodsFor: 'as yet unclassified' stamp: 'jorgemartinez 7/13/2013 08:23'!hazTuTarea:unaColmenaself ventilaA:unaColmena ! !!Zangano methodsFor: 'as yet unclassified' stamp: 'jorge 6/9/2013 16:08'!initialize aguijon := false. capacidadDeventilar:=5.! !!Zangano methodsFor: 'as yet unclassified' stamp: 'jorge 6/9/2013 16:28'!ventilaA: unaColmenaself disminuyeTemperatura:unaColmena.self disminuyeHumedad:unaColmena."ventila a la colmena"! !!Zangano methodsFor: 'accessing' stamp: 'jorgemartinez 6/8/2013 16:27'!capacidadDeventilar	^ capacidadDeventilar! !!Zangano methodsFor: 'accessing' stamp: 'jorge 6/9/2013 16:28'!capacidadDeventilar: unValor	capacidadDeventilar := unValor! !!Zangano methodsFor: 'accessing' stamp: 'jorgemartinez 7/12/2013 17:31'!disminuyeHumedad:unaColmena( (unaColmena nectar humedadNectar - (self capacidadDeventilar) )< 0)ifFalse:[unaColmena nectar disminuirHumedad:self capacidadDeventilar]"no disminuye la humedad sino hace falta".! !!Zangano methodsFor: 'accessing' stamp: 'jorge 6/9/2013 19:12'!disminuyeTemperatura:unaColmena( (unaColmena temperatura - (self capacidadDeventilar)) <20)ifFalse:[unaColmena disminuirTemperatura:self capacidadDeventilar. ]"no deben enfriar la colmena sino hace falta."! !!Zangano methodsFor: 'accessing' stamp: 'jorgemartinez 7/13/2013 08:29'!enferma:  unaEnfermedadunaEnfermedad  afectaZangano: self.! !!Zangano methodsFor: 'accessing' stamp: 'jorgemartinez 7/15/2013 21:21'!enfermate:unPorcentajecapacidadDeventilar:= self capacidadDeventilar - (self capacidadDeventilar*unPorcentaje).! !Varroa subclass: #VarroaDestructora	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: ''	category: 'TpApiario cambiado'!!VarroaDestructora methodsFor: 'as yet unclassified' stamp: 'jorge 6/9/2013 17:12'!afectaAlmacenadora: unaAlmacenadorasuper afectaAlmacenadora: unaAlmacenadora. unaAlmacenadora enfermate:0.5.! !