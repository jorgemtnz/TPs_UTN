program hola;
uses
 crt;
const
 CANT_STAR=25;
type
 str20=string[20];
 str30=string[30];

 tregStar= record
           nomStar: str20;
           coordX, coordY: word;
           nroOrden: byte;
           end;
 tvStar = array[1..CANT_STAR] of tregStar;
 tregCnstStar= record
             nomCnstlcn: str30;
             cjtoStar: tvStar;
             end;
 tarcCnstStar = file of tregCnstStar;

 tregSeg = record
          ptoOrigen: byte;
          ptoDestino: byte;
          end;
 tvSeg = array[1..CANT_STAR] of tregSeg;
 tregCnstSeg = record
             nomCnstSeg: str30;
             cjtoSeg: tvSeg;
             end;
  tarcCnstSeg = file of tregCnstSeg;

{ var
 CnstStar: tarcCnstStar;
 rCnstStar: tregCnstStar;
 CnstSeg: tarcCnstSeg;
 rCnstSeg: tregCnstSeg;}

 function menuprin:byte;
  var
  op : byte;
  begin
   repeat
    gotoxy(21,20); writeln('Elija una opcion');
    gotoxy(21,11); writeln(' 1.   Crear archivos Binarios de Constelaciones ');
    gotoxy(21,13); writeln(' 2.   Agregar Nueva Constelacion ');
    gotoxy(21,15); writeln(' 3.   Consultar Archivo de Constelaciones ');
    gotoxy(21,17); writeln(' 4.   Salir de la Aplicacion  ');
    gotoxy(21,21); readln(op)
   until (op<5)and(op>0);
   menuprin := op;
   ClrScr;
  end;

  Procedure ventana;
   var
    i,j,k,l,x1,y1,x2,y2:byte;
   begin
    x1:=20;
    y1:=10;
    x2:=65;
    y2:=25;
    gotoXY (x1,y1);
    write ('É');
    for i:=(x1+1) to (x2-1) do
     write ('Í');
     writeln ('»');
    for j:=(y1+1) to y2 do
     begin
      gotoXY (x2,j);
      writeln ('º');
     end;
    for k:=(y1+1) to y2 do
     begin
      gotoXY (x1,k);
      writeln ('º');
     end;
    gotoXY (x1,y2+1);
    write ('È');
    for l:=(x1+1) to (x2-1) do
     write ('Í');
     write ('¼');
     gotoXY (x1+1,y1+1);
   end;
 { FALTAN
 procedure AbrirBinStar
 procedure AbrirTex
 procedure selec (que llama a menuprin, y segun el resultado,
 en el case que tiene se hace uno u otra opcion, llamando
 a los procedimientos necesarios
 }
 procedure act(var tarcCnstStar1:tarcCnstStar;var tarcCnstSeg1:tarcCnstSeg);
 var
 archivotxt :text;
 nomtxt,nombinC,nombinS: string;
 nocons, nest:str30;
 d,r,c,z,nor,ptoor,ptodes: byte;
 cox,coy: word;
 tregCnstStar1:tregCnstStar;
 tregCnstSeg1:tregCnstSeg;
  begin
   writeln('Archivos a actualizar a partir de un archivo.txt');
   writeln('Ingrese nombre del archivo de texto: ');
   readln(nomtxt);
   write ('Ingrese nombre del archivo binario Constelacion :');
   readln(nombinC);
   write ('Ingrese nombre del archivo binario Segmentos :');
   readln(nombinS);
   assign(archivotxt,'nomtxt.txt');
   reset(archivotxt);
   assign(tarcCnstStar1,'C:\TP\TRP\'+nombinC+'.dat');
   reset(tarcCnstStar1);
   assign(tarcCnstSeg1,'nombinS.dat');
   reset(tarcCnstSeg1);
   seek(tarcCnstStar1,filesize(tarcCnstStar1));
   seek(tarcCnstSeg1,filesize(tarcCnstSeg1));
      while not eoln(archivotxt) do
       begin
        c:=0;
        z:=0;
        readln(archivotxt,nocons);
        tregCnstStar1.nomCnstlcn:=nocons;
        repeat
          begin
           c:=c+1;
           readln(archivotxt,cox,coy,nor,nest);
           tregCnstStar1.cjtoStar[c].coordX:=cox;
           tregCnstStar1.cjtoStar[c].coordY:=coy;
           tregCnstStar1.cjtoStar[c].nroOrden:=nor;
           tregCnstStar1.cjtoStar[c].nomStar:=nest;
           write(tarcCnstStar1,tregCnstStar1);
          end;
          until ((cox=0) and (coy=0) and (nor=0) and (nest='*'));
          repeat
           begin
            z:=z+1;
            readln(archivotxt,ptoor,ptodes);
            tregCnstSeg1.cjtoSeg[z].ptoOrigen:=ptoor;
            tregCnstSeg1.cjtoSeg[z].ptoDestino:=ptodes;
            write(tarcCnstSeg1,tregCnstSeg1);
           end;
          until ((ptoor=0) and (ptodes=0));
        end;
      close(tarcCnstSeg1);
      close(tarcCnstStar1);
      close(archivotxt);
  end;

 procedure cop(var tarcCnstStar1:tarcCnstStar;var tarcCnstSeg1:tarcCnstSeg);
  var
  archivotxt :text;
  nomtxt,nombinC,nombinS: string;
  nocons, nest:str30;
  d,r,c,z,nor,ptoor,ptodes: byte;
  cox,coy: word;
  tregCnstStar1:tregCnstStar;
  tregCnstSeg1:tregCnstSeg;
  begin
   writeln('Archivos a Crear a partir de un archivo.txt');
   writeln('Ingrese nombre del archivo de texto: ');
   readln(nomtxt);
   write ('Ingrese nombre del archivo binario Constelacion :');
   readln(nombinC);
   write ('Ingrese nombre del archivo binario Segmentos :');
   readln(nombinS);
   assign(archivotxt,'nomtxt.txt');
   reset(archivotxt);
   assign(tarcCnstStar1,'nombinC.dat');
   reset(tarcCnstStar1);
   assign(tarcCnstSeg1,'nombinS.dat');
   reset(tarcCnstSeg1);
      while not eoln(archivotxt) do
       begin
        c:=0;
        z:=0;
        readln(archivotxt,nocons);
        tregCnstStar1.nomCnstlcn:=nocons;
        repeat
          begin
           c:=c+1;
           readln(archivotxt,cox,coy,nor,nest);
           tregCnstStar1.cjtoStar[c].coordX:=cox;
           tregCnstStar1.cjtoStar[c].coordY:=coy;
           tregCnstStar1.cjtoStar[c].nroOrden:=nor;
           tregCnstStar1.cjtoStar[c].nomStar:=nest;
           write(tarcCnstStar1,tregCnstStar1);
          end;
          until ((cox=0) and (coy=0) and (nor=0) and (nest='*'));
          repeat
           begin
            z:=z+1;
            readln(archivotxt,ptoor,ptodes);
            tregCnstSeg1.cjtoSeg[z].ptoOrigen:=ptoor;
            tregCnstSeg1.cjtoSeg[z].ptoDestino:=ptodes;
            write(tarcCnstSeg1,tregCnstSeg1);
           end;
          until ((ptoor=0) and (ptodes=0));
        end;
      close(tarcCnstSeg1);
      close(tarcCnstStar1);
      close(archivotxt);
   end;

 procedure crea(var tarcCnstStar1:tarcCnstStar;var tarcCnstSeg1:tarcCnstSeg);
  var
  archivo1,archivotxt :text;
  nomtxt,nombinC,nombinS: string;
  nocons, nest:str30;
  opc,d,r,c,z,nor,ptoor,ptodes: byte;
  cox,coy: word;
  tregCnstStar1:tregCnstStar;
  tregCnstSeg1:tregCnstSeg;
  begin
   writeln('Archivo.txt a Crear a partir de un archivos');
   writeln('selecione una opcion valida');
   writeln('1. Archivos binarios Constelacion y Estrella ');
   writeln('2. Archivo de texto  Cnstlcns.txt');
   readln(opc);
   if opc = 1 then
   begin
    writeln('Ingrese nombre del archivo de texto: ');
    readln(nomtxt);
    write ('Ingrese nombre del archivo binario Constelacion :');
    readln(nombinC);
    write ('Ingrese nombre del archivo binario Segmentos :');
    readln(nombinS);
    assign(archivotxt,'nomtxt.txt');
    reset(archivotxt);
    assign(tarcCnstStar1,'nombinC.dat');
    reset(tarcCnstStar1);
    assign(tarcCnstSeg1,'nombinS.dat');
    reset(tarcCnstSeg1);
      while not eoln(archivotxt) do
       begin
        c:=0;
        z:=0;
        nocons:= tregCnstStar1.nomCnstlcn;
        writeln(archivotxt,nocons);
        repeat
          begin
           c:=c+1;
           {readln(tarcCnstStar,tregCnstStar);}
           cox:=tregCnstStar1.cjtoStar[c].coordX;
           coy:=tregCnstStar1.cjtoStar[c].coordY;
           nor:=tregCnstStar1.cjtoStar[c].nroOrden;
           nest:=tregCnstStar1.cjtoStar[c].nomStar;
           writeln(archivotxt,cox,coy,nor,nest);
          end;
          until ((cox=0) and (coy=0) and (nor=0) and (nest='*'));
          repeat
           begin
            z:=z+1;
           { read(tarcCnstSeg,tregCnstSeg)  }
            ptoor:=tregCnstSeg1.cjtoSeg[z].ptoOrigen;
            ptodes:=tregCnstSeg1.cjtoSeg[z].ptoDestino;
            writeln(archivotxt,ptoor,ptodes);
           end;
          until ((ptoor=0) and (ptodes=0));
         end;
      close(tarcCnstSeg1);
      close(tarcCnstStar1);
      close(archivotxt);
      end
    else
     begin
      write('ingrese el nombre del archivo de texto a crear:');
      readln(nomtxt);
      assign(archivotxt,'Cnstlcns.txt');
      reset(archivotxt);
      assign(archivo1,'nomtxt.txt');
      rewrite(archivo1);
      while not eoln(archivotxt) do
       begin
        c:=0;
        z:=0;
        readln(archivotxt,nocons);
        write(archivo1,nocons);
        repeat
          begin
           readln(archivotxt,cox,coy,nor,nest);
           write(archivo1,cox);
           write(archivo1,coy);
           write(archivo1,nor);
           writeln(archivo1,nest);
          end;
          until ((cox=0) and (coy=0) and (nor=0) and (nest='*'));
          repeat
           begin
            readln(archivotxt,ptoor,ptodes);
            write(archivo1,ptoor);
            writeln(archivo1,ptodes);
           end;
          until ((ptoor=0) and (ptodes=0));
         end;
       close(archivo1);
       close(archivotxt);
      end;

   end;

     { begin
  write('ingrese el nombre del archivo de texto:'
    assign(archivo,'.txt');
    reset(archivo);
    readln(archivo,nom,num);
    assign(archivo1,'2.txt');
    rewrite(archivo1);
    write(archivo1,nom,num);
    close(archivo1);
    end;}
 procedure opcion;
 var
 opc: byte;
 {Cons : tarcConstStar;
 RCons: tregCnstStar;
 Seg:tarcCnstSeg;
 RSeg:tregConstSeg; }
 Cons: tarcCnstStar;
 {rCnstStar: tregCnstStar; }
 Seg: tarcCnstSeg;
 {rCnstSeg: tregCnstSeg;}
 begin
 {repeat}
  opc:=menuprin;
  case opc of

    1: cop(Cons,Seg);
    2: act(Cons,Seg);
    3: crea(Cons,Seg);
    else
    writeln(' Fin del Programa');
    {assign(Cons);
    assign(Seg);
    close(Cons);
    close(Seg);  }
   {until (opc = 4);}
 end;
end;
Begin
 ClrScr;
 {nom:='w';
 opc:=menuprin;
 writeln('            ',opc);
 ventana;}
 {append(archivo1);
 writeln(archivo1,'segundo');
 close(archivo1);}
 opcion;
 delay(1500);
end.
